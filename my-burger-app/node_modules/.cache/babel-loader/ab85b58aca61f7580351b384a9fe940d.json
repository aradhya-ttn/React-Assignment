{"ast":null,"code":"var _jsxFileName = \"/home/aradhya/React-project/bootcamp-react/my-burger-app/src/containers/Orders/Orders.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    });\n\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => /*#__PURE__*/React.createElement(Order, {\n        key: order.id,\n        ingredients: order.ingredients,\n        price: +order.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, orders);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/aradhya/React-project/bootcamp-react/my-burger-app/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","componentDidMount","props","onFetchOrders","token","userId","render","orders","loading","map","order","id","ingredients","price","mapStateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA8B;AAI1BQ,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC,EAA2C,KAAKF,KAAL,CAAWG,MAAtD;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,MAAM,gBAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;;AACA,QAAG,CAAC,KAAKL,KAAL,CAAWM,OAAf,EAAuB;AACnBD,MAAAA,MAAM,GAAI,KAAKL,KAAL,CAAWK,MAAX,CAAkBE,GAAlB,CAAsBC,KAAK,iBACjC,oBAAC,KAAD;AACA,QAAA,GAAG,EAAEA,KAAK,CAACC,EADX;AAEA,QAAA,WAAW,EAAED,KAAK,CAACE,WAFnB;AAGA,QAAA,KAAK,EAAE,CAACF,KAAK,CAACG,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAV;AAMH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,MADL,CADJ;AAKH;;AAvByB;;AA0B9B,MAAMO,eAAe,GAAEC,KAAK,IAAI;AAC5B,SAAM;AACFR,IAAAA,MAAM,EAAEQ,KAAK,CAACL,KAAN,CAAYH,MADlB;AAEFC,IAAAA,OAAO,EAAEO,KAAK,CAACL,KAAN,CAAYF,OAFnB;AAGFJ,IAAAA,KAAK,EAAEW,KAAK,CAACC,IAAN,CAAWZ,KAHhB;AAIFC,IAAAA,MAAM,EAAEU,KAAK,CAACC,IAAN,CAAWX;AAJjB,GAAN;AAMH,CAPD;;AASA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFf,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAgBa,QAAQ,CAACpB,OAAO,CAACqB,WAAR,CAAoBf,KAApB,EAA2BC,MAA3B,CAAD;AADrC,GAAN;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,gBAAgB,CAACG,MAAD,EAAQJ,KAAR,CAA7D,CAAf","sourcesContent":["import React,{ Component } from \"react\"\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'; \nimport * as actions from '../../store/actions/index'; \nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component{\n\n    \n\n    componentDidMount(){\n        this.props.onFetchOrders(this.props.token ,this.props.userId);\n    }\n\n    render(){\n        let orders= <Spinner />;\n        if(!this.props.loading){\n            orders =  this.props.orders.map(order => (\n                <Order \n                key={order.id}\n                ingredients={order.ingredients}\n                price={+order.price} />\n            ))\n        }\n        return(\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps= state => {\n    return{\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};  \n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onFetchOrders: (token,userId)=>dispatch(actions.fetchOrders(token, userId)) \n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));"]},"metadata":{},"sourceType":"module"}