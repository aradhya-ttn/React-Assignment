{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    meat: 0,\n    bacon: 0,\n    cheese: 0\n  },\n  totalPrice: 15\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }\n      };\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return { ...state,\n        ingredients: { ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/aradhya/React-App/my-burger-app/src/store/reducer.js"],"names":["actionTypes","initialState","ingredients","salad","meat","bacon","cheese","totalPrice","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAG;AACVC,IAAAA,KAAK,EAAC,CADI;AAEVC,IAAAA,IAAI,EAAC,CAFK;AAGVC,IAAAA,KAAK,EAAC,CAHI;AAIVC,IAAAA,MAAM,EAAC;AAJG,GADG;AAOjBC,EAAAA,UAAU,EAAE;AAPK,CAArB;;AAWA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAiC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAW,CAACY,cAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEFP,QAAAA,WAAW,EAAE,EACT,GAAGO,KAAK,CAACP,WADA;AAET,WAACQ,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACP,WAAN,CAAkBQ,MAAM,CAACG,cAAzB,IAAyC;AAFzD;AAFX,OAAN;;AAOJ,SAAKb,WAAW,CAAEc,iBAAlB;AACI,aAAM,EACF,GAAGL,KADD;AAEFP,QAAAA,WAAW,EAAE,EACT,GAAGO,KAAK,CAACP,WADA;AAET,WAACQ,MAAM,CAACG,cAAR,GAAyBJ,KAAK,CAACP,WAAN,CAAkBQ,MAAM,CAACG,cAAzB,IAAyC;AAFzD;AAFX,OAAN;;AAOJ;AACI,aAAOJ,KAAP;AAlBR;AAqBH,CAtBD;;AAwBA,eAAgBD,OAAhB","sourcesContent":["import * as actionTypes from './actions'\n\nconst initialState = {\n    ingredients : {\n        salad:0,\n        meat:0,\n        bacon:0,\n        cheese:0\n    },\n    totalPrice: 15,\n};\n\n\nconst reducer = (state = initialState, action) =>{\n    switch (action.type){\n        case actionTypes.ADD_INGREDIENT:\n            return{\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName]+1\n                }\n            };\n        case actionTypes. REMOVE_INGREDIENT:\n            return{\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName]-1\n                }\n            }; \n        default:\n            return state;\n    }\n    \n};\n\nexport  default reducer;"]},"metadata":{},"sourceType":"module"}