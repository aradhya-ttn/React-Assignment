{"ast":null,"code":"var _jsxFileName = \"/home/aradhya/React-App/my-burger-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 25,\n  cheese: 35,\n  meat: 30,\n  bacon: 35\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 15,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPriceordered;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      const queryParam = [];\n\n      for (let i in this.state.ingredients) {\n        queryParam.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParam.push('price=' + this.state.totalPrice);\n      const queryString = queryParam.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('https://react-my-burger-bootcamp.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 40\n      }\n    }, \"Ingredient can't be loaded>\") : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 112\n      }\n    }));\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 22\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 26\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/aradhya/React-App/my-burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","BuildControls","Aux","Burger","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","purchaseHandler","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","updatePurchaseState","removeIngredientHandler","priceDeduction","totalPriceordered","purchaseCancelHandler","purchaseContinueHandler","queryParam","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","console","log","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n\n\n\nconst INGREDIENT_PRICES = {\n    salad: 25,\n    cheese: 35,\n    meat: 30,\n    bacon: 35\n};\n\nclass BurgerBuilder extends Component{\n    state = {\n        ingredients : null,\n        totalPrice: 15,\n        purchasable:false,\n        purchasing:false,\n        loading:false,\n        error:false\n    }\n\n    componentDidMount(){\n        console.log(this.props);\n        axios.get('https://react-my-burger-bootcamp.firebaseio.com/ingredients.json')\n          .then(response => {\n                this.setState({ingredients:response.data})\n          })\n          .catch(error => {\n              this.setState({error:true});\n          });\n    }\n\n    updatePurchaseState (ingredients) {\n       \n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey];\n        })\n        .reduce((sum,el) => {\n            return sum +el;\n        },0);\n        this.setState({purchasable: sum > 0})\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing:true});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount= this.state.ingredients[type];\n        const updatedCount = oldCount+1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice,ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount= this.state.ingredients[type];\n        if(oldCount <=0){\n            return;\n        }\n        const updatedCount = oldCount-1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPriceordered;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice,ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () =>{\n        \n        const queryParam = [];\n        for(let i in this.state.ingredients){\n            queryParam.push(encodeURIComponent(i)+ '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParam.push('price='+this.state.totalPrice);\n        const queryString = queryParam.join('&');\n        this.props.history.push({\n            pathname:'/checkout',\n            search:'?'+ queryString });\n    }\n\n\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0;\n        }\n        \n        \n        \n\n        let orderSummary=null;\n        \n        let burger =this.state.error ? <p>Ingredient can't be loaded></p> : <div style={{alignItems:\"center\"}}><Spinner /></div>\n        if(this.state.ingredients){\n            burger =(\n                <Aux>\n                    <Burger ingredients={this.state.ingredients}/>\n                    <BuildControls \n                        ingredientAdded = {this.addIngredientHandler} \n                        ingredientRemoved = {this.removeIngredientHandler} \n                        disabled={disabledInfo} \n                        purchasable={this.state.purchasable}\n                        ordered={this.purchaseHandler}\n                        price={this.state.totalPrice} \n                    />\n                    </Aux>\n            );\n        \n        orderSummary=<OrderSummary \n            ingredients={this.state.ingredients}\n            price={this.state.totalPrice}\n            purchaseCancelled={this.purchaseCancelHandler}\n            purchaseContinued={this.purchaseContinueHandler} />\n        }   \n        if(this.state.loading){\n            orderSummary=<Spinner />    \n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n        \n    }\n}\n\n\n\nexport default withErrorHandler(BurgerBuilder,axios);"]},"metadata":{},"sourceType":"module"}