{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nconst purchaseBurgerStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseBurgerFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchOrderStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchOrderSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchOrderFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.BURGER_PURCHASE_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.BURGER_PURCHASE_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrderStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrderSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrderFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/aradhya/React-project/bootcamp-react/my-burger-app/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_START","BURGER_PURCHASE_SUCCESS","BURGER_PURCHASE_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\n    const initialState={\n        orders: [],\n        loading :false,\n        purchased:false\n    };\n\n    const purchaseInit=(state,action)=>{\n        return updateObject(state,{purchased: false});\n    }\n    const purchaseBurgerStart =( state, action) =>{\n        return updateObject(state,{loading: true});\n    }\n    const purchaseBurgerSuccess =( state, action) =>{\n        const newOrder = updateObject(action.orderData,{id: action.orderId});\n                return updateObject(state, {\n                    loading:false,\n                    purchased: true,\n                    orders: state.orders.concat(newOrder) \n                });\n    }\n    const purchaseBurgerFail =( state, action) =>{\n        return updateObject(state,{loading: false});\n    }\n\n    const fetchOrderStart=(state, action)=>{\n        return updateObject(state,{loading: true});\n    }\n    const fetchOrderSuccess=(state, action)=>{\n        return updateObject(state,{orders: action.orders,loading: false});\n    }\n\n    const fetchOrderFail=(state, action)=>{\n        return updateObject(state,{loading: false});\n    }\n\n\n    const reducer = (state = initialState  ,action)=> {\n        switch(action.type){\n            case actionTypes.PURCHASE_INIT:return purchaseInit(state,action);\n                \n\n            case actionTypes.PURCHASE_BURGER_START:return purchaseBurgerStart(state,action);\n                \n            \n            case actionTypes.BURGER_PURCHASE_SUCCESS: return purchaseBurgerSuccess(state,action);\n                \n                 \n            case actionTypes.BURGER_PURCHASE_FAIL: return purchaseBurgerFail(state,action);\n                \n\n            case actionTypes.FETCH_ORDERS_START: return fetchOrderStart(state,action);\n                \n            case actionTypes.FETCH_ORDERS_SUCCESS:return fetchOrderSuccess(state,action);\n               \n\n            case actionTypes.FETCH_ORDERS_FAIL: return fetchOrderFail(state,action);\n                \n            default: return state;\n        }\n\n    };\n    export default reducer;"]},"metadata":{},"sourceType":"module"}