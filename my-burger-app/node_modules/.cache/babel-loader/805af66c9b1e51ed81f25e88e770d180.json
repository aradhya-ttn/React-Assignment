{"ast":null,"code":"var _jsxFileName = \"/home/aradhya/React-project/bootcamp-react/my-burger-app/src/App.js\";\nimport React, { Component } from 'react';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Orders from './containers/Orders/Orders';\nimport Layout from './hoc/Layout/Layout';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout');\n});\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      component: asyncAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: BurgerBuilder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }));\n\n    if (this.props.isAuthenticated) {\n      routes = /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/checkout\",\n        component: asyncCheckout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/orders\",\n        component: asyncOrders,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: BurgerBuilder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, routes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/home/aradhya/React-project/bootcamp-react/my-burger-app/src/App.js"],"names":["React","Component","BurgerBuilder","Orders","Layout","Checkout","Switch","Route","withRouter","Redirect","Auth","Logout","connect","actions","asyncComponent","asyncCheckout","asyncOrders","asyncAuth","App","componentDidMount","props","onTryAutoSignup","render","routes","isAuthenticated","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Orders from './containers/Orders/Orders';\nimport Layout from './hoc/Layout/Layout';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Switch, Route,withRouter,Redirect } from 'react-router-dom';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from  './hoc/asyncComponent/asyncComponent';\n\n\nconst asyncCheckout = asyncComponent(()=>{\n  return import('./containers/Checkout/Checkout');\n});\nconst asyncOrders = asyncComponent(()=>{\n  return import('./containers/Orders/Orders');\n});\nconst asyncAuth = asyncComponent(()=>{\n  return import('./containers/Auth/Auth');\n});\n\nclass App extends Component {\n \n  componentDidMount(){\n    this.props.onTryAutoSignup();\n  }\n  \n  render() {\n    let routes = (\n      <Switch>\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to='/'/>\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n            <Route path=\"/checkout\" component={asyncCheckout} />\n            <Route path=\"/orders\" component={asyncOrders} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Redirect to='/'/>\n        </Switch>\n      );\n    }\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated : state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps= dispatch =>{\n  return{\n    onTryAutoSignup: ()=> dispatch(actions.authCheckState())\n  };\n\n};\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n"]},"metadata":{},"sourceType":"module"}