{"ast":null,"code":"import _objectSpread from\"/home/aradhya/React-App/my-burger-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/aradhya/React-App/my-burger-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/aradhya/React-App/my-burger-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/aradhya/React-App/my-burger-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/aradhya/React-App/my-burger-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Button from'../../../components/UI/Button/Button';import classes from'./ContactData.module.css';import axios from'../../../axios-orders';import Spinner from'../../../components/UI/Spinner/Spinner';import Input from'../../../components/UI/Input/Input';var ContactData=/*#__PURE__*/function(_Component){_inherits(ContactData,_Component);var _super=_createSuper(ContactData);function ContactData(){var _this;_classCallCheck(this,ContactData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={orderForm:{name:{elementType:'input',elementConfig:{type:'text',placeholder:'Your Name'},value:'',validation:{required:true},valid:false,touched:false},streets:{elementType:'input',elementConfig:{type:'text',placeholder:'Street'},value:'',validation:{required:true},valid:false,touched:false},zipCode:{elementType:'input',elementConfig:{type:'text',placeholder:'Zip Code'},value:'',validation:{required:true,minLength:6,maxLength:6},valid:false,touched:false},country:{elementType:'input',elementConfig:{type:'text',placeholder:'Country'},value:'',validation:{required:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'Email'},value:'',validation:{required:true},valid:false,touched:false},paymentMethod:{elementType:'select',elementConfig:{options:[{value:'cod',displayValue:'CashOnDelivery'},{value:'card',displayValue:'DebitCard'},{value:'netbanking',displayValue:'NetBanking'}]},value:'',valid:true}},formIsValid:false,loading:false};_this.orderHandler=function(event){event.preventDefault();_this.setState({loading:true});var formData={};for(var formElementIdentifier in _this.state.orderForm){formData[formElementIdentifier]=_this.state.orderForm[formElementIdentifier].value;}var order={ingredients:_this.props.ingredients,price:_this.props.price,orderData:formData};axios.post('/orders.json',order).then(function(response){_this.setState({loading:false});_this.props.history.push(\"/\");}).catch(function(error){_this.setState({loading:false});});console.log(_this.props.ingredients);};_this.inputChangedHandler=function(event,inputIdentifier){var updatedOrderForm=_objectSpread({},_this.state.orderForm);var updatedFormElement=_objectSpread({},updatedOrderForm[inputIdentifier]);updatedFormElement.value=event.target.value;updatedFormElement.valid=_this.checkValidity(updatedFormElement.value,updatedFormElement.validation);updatedFormElement.touched=true;updatedOrderForm[inputIdentifier]=updatedFormElement;var formIsValid=true;for(var _inputIdentifier in updatedOrderForm){formIsValid=updatedOrderForm[_inputIdentifier].valid&&formIsValid;}_this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});};return _this;}_createClass(ContactData,[{key:\"checkValidity\",value:function checkValidity(value,rules){var isValid=true;if(rules!=null){if(rules.required&&isValid){isValid=value.trim()!=='';}if(rules.minLength&&isValid){isValid=value.length>=rules.minLength;}if(rules.maxLength&&isValid){isValid=value.length<=rules.maxLength;}}return isValid;}},{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.orderForm){formElementsArray.push({id:key,config:this.state.orderForm[key]});}var form=/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.orderHandler},formElementsArray.map(function(formElement){return/*#__PURE__*/React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);}});}),/*#__PURE__*/React.createElement(Button,{btnType:\"Success\",disabled:!this.state.formIsValid},\"ORDER\"));if(this.state.loading){form=/*#__PURE__*/React.createElement(Spinner,null);}return/*#__PURE__*/React.createElement(\"div\",{className:classes.ContactData},/*#__PURE__*/React.createElement(\"h4\",null,\"Enter Your Contact Details\"),form);}}]);return ContactData;}(Component);export default ContactData;","map":{"version":3,"sources":["/home/aradhya/React-App/my-burger-app/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","streets","zipCode","minLength","maxLength","country","email","paymentMethod","options","displayValue","formIsValid","loading","orderHandler","event","preventDefault","setState","formData","formElementIdentifier","order","ingredients","props","price","orderData","post","then","response","history","push","catch","error","console","log","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","length","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\n\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders'\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component{\n    state={\n        orderForm:{\n            \n            name: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Your Name'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            streets:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Street'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            zipCode: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Zip Code'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minLength:6,\n                    maxLength:6\n                },\n                valid:false,\n                touched:false\n            },\n            country: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Country'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'Email'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            paymentMethod: {\n                elementType:'select',\n                elementConfig:{\n                    options:[\n                        {value:'cod', displayValue:'CashOnDelivery'},\n                        {value:'card', displayValue:'DebitCard'},\n                        {value:'netbanking', displayValue:'NetBanking'}\n                    ]\n                },\n                value:'',\n                valid:true\n            }\n        },\n        formIsValid : false,\n        loading:false\n    }\n\n    orderHandler = (event) =>{\n        event.preventDefault();\n        this.setState({loading:true});\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order={\n            ingredients: this.props.ingredients,\n            price:this.props.price,\n            orderData : formData\n            }\n        axios.post('/orders.json',order)\n             .then(response => {\n                 this.setState({loading:false});\n                 this.props.history.push(\"/\");\n             })\n             .catch(error => {this.setState({loading:false});\n            });\n        console.log(this.props.ingredients);\n    }\n\n    checkValidity(value,rules){\n        let isValid = true;\n        if(rules!=null){\n            if(rules.required && isValid){\n                isValid = value.trim() !=='';\n            }\n            if(rules.minLength && isValid){\n                isValid = value.length >= rules.minLength ;\n            }\n            if(rules.maxLength && isValid){\n                isValid = value.length <= rules.maxLength ;\n            }\n        }\n        return isValid;\n    }\n\n    inputChangedHandler = (event,inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let   formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        } \n        \n        this.setState({orderForm : updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render(){\n\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id:key,\n                config:this.state.orderForm[key]\n            });\n        }\n\n        let form=(\n            <form onSubmit={this.orderHandler}>\n                    {formElementsArray.map(formElement => (\n                        <Input\n                            key={formElement.id}\n                            elementType={formElement.config.elementType}\n                            elementConfig={formElement.config.elementConfig}\n                            value={formElement.config.value}\n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation}\n                            touched = {formElement.config.touched}\n                            changed={(event)=>this.inputChangedHandler(event,formElement.id)} />\n                    ))}\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid} >ORDER</Button>\n                </form>\n        );\n        if(this.state.loading){\n            form=<Spinner/>\n        }\n        return(\n            <div className={classes.ContactData}>\n                <h4>Enter Your Contact Details</h4>\n                {form}\n            </div>\n        );\n    }\n} \nexport default ContactData;"]},"metadata":{},"sourceType":"module"}