{"ast":null,"code":"import _objectSpread from \"/home/aradhya/React-project/bootcamp-react/my-burger-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/aradhya/React-project/bootcamp-react/my-burger-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      if (this.props.isAuthenticated) {\n        this.setState({\n          purchasing: true\n        });\n      } else {\n        this.props.onSetAuthRedirectpath('/checkout');\n        this.props.history.push('/auth');\n      }\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.onInitPurchase();\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    this.props.oninitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.props.ings);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 40\n      }\n    }, \"Ingredient can't be loaded \") : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 112\n      }\n    }));\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        isAuth: this.props.isAuthenticated,\n        price: this.props.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.price,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(actions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(actions.removeIngredient(ingName)),\n    oninitIngredients: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n    onSetAuthRedirectpath: path => dispatch(actions.setAuthRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/aradhya/React-project/bootcamp-react/my-burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","BuildControls","Aux","Burger","Modal","OrderSummary","Spinner","withErrorHandler","actions","connect","BurgerBuilder","state","purchasing","purchaseHandler","props","isAuthenticated","setState","onSetAuthRedirectpath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","componentDidMount","oninitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","error","alignItems","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","burgerBuilder","totalPrice","auth","token","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","purchaseInit","path","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../axios-orders'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nclass BurgerBuilder extends Component{\n    state = {\n        purchasing:false,\n\n    }\n\n    componentDidMount(){\n       \n        this.props.oninitIngredients();\n        \n    }\n\n    updatePurchaseState (ingredients) {\n       \n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey];\n        })\n        .reduce((sum,el) => {\n            return sum +el;\n        },0);\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if(this.props.isAuthenticated){\n            this.setState({purchasing:true});\n        }else{\n            this.props.onSetAuthRedirectpath('/checkout');\n            this.props.history.push('/auth');\n        }\n        \n    }\n\n    \n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () =>{\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n\n    render(){\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0;\n        }\n        \n        \n        \n\n        let orderSummary=null;\n        \n        let burger =this.props.error ? <p>Ingredient can't be loaded </p> : <div style={{alignItems:\"center\"}}><Spinner /></div>\n        if(this.props.ings){\n            burger =(\n                <Aux>\n                    <Burger ingredients={this.props.ings}/>\n                    <BuildControls \n                        ingredientAdded = {this.props.onIngredientAdded} \n                        ingredientRemoved = {this.props.onIngredientRemoved} \n                        disabled={disabledInfo} \n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                        price={this.props.price} \n                    />\n                    </Aux>\n            );\n        \n        orderSummary=<OrderSummary \n            ingredients={this.props.ings}\n            price={this.props.price}\n            purchaseCancelled={this.purchaseCancelHandler}\n            purchaseContinued={this.purchaseContinueHandler} />\n        }   \n    \n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n        \n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        ings:state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error:state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !==null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onIngredientAdded : (ingName)  => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved : (ingName)  => dispatch(actions.removeIngredient(ingName)),\n        oninitIngredients : () => dispatch(actions.initIngredients()),\n        onInitPurchase: () =>dispatch(actions.purchaseInit()),\n        onSetAuthRedirectpath: (path)=> dispatch(actions.setAuthRedirectPath(path))\n          \n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps) (withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}