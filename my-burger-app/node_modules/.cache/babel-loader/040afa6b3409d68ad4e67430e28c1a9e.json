{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nimport { setIngredients } from '../actions/burgerBuilder';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 15,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 25,\n  cheese: 35,\n  meat: 30,\n  bacon: 35\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIns = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIns,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredient = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 15,\n    error: false,\n    building: false\n  });\n};\n\nconst fetchIngredientFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredient(state, action);\n\n    case actionTypes.FETCH_INGREDIENT_FAILED:\n      return fetchIngredientFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/aradhya/React-project/bootcamp-react/my-burger-app/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","setIngredients","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIng","updatedIns","updatedSt","setIngredient","fetchIngredientFailed","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENT_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\nimport { setIngredients } from '../actions/burgerBuilder';\n\n\nconst initialState = {\n    ingredients : null,  \n    totalPrice: 15,\n    error: false,\n    building:false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 25,\n    cheese: 35,\n    meat: 30,\n    bacon: 35\n};\n\nconst addIngredient = (state, action)=>{\n    const updatedIngredient = {[action.ingredientName]:state.ingredients[action.ingredientName]+1}\n            const  updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n            const updatedState = {\n                ingredients: updatedIngredients,\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true    \n            }\n            return updateObject(state,updatedState);\n\n};\n\nconst removeIngredient = (state,action) =>{\n    const updatedIng = {[action.ingredientName]:state.ingredients[action.ingredientName]-1}\n    const  updatedIns = updateObject(state.ingredients, updatedIng);\n    const updatedSt = {\n        ingredients: updatedIns,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state,updatedSt);\n}\n\nconst setIngredient = (state,action) =>{\n    return updateObject(state,{\n        ingredients:{\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice:15,\n        error:false,\n        building: false\n       \n    }); \n}\n\nconst fetchIngredientFailed = (state, action) =>{\n    return updateObject(state,{ error:true});\n}\n\nconst reducer = (state = initialState,action) => {\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state,action);\n            \n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state,action);\n            \n        case actionTypes.SET_INGREDIENTS: return setIngredient(state, action);\n            \n        case actionTypes.FETCH_INGREDIENT_FAILED: return fetchIngredientFailed(state,action);\n            \n        default: return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}