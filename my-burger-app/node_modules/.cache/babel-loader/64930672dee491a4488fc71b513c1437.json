{"ast":null,"code":"import _objectSpread from \"/home/aradhya/React-project/bootcamp-react/my-burger-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.BURGER_PURCHASE_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport const purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.BURGER_PURCHASE_FAIL,\n    error: error\n  };\n};\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios.post('/orders.json?auth=' + token, orderData).then(response => {\n      console.log(response.data);\n      dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n    }).catch(error => {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    const queryParam = '?auth=' + token + '&orderBy=\"userId\"&equalTO=\"' + userId + '\"';\n    axios.get('/orders.json' + queryParam).then(res => {\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    }).catch(err => {\n      dispatch(fetchOrdersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/aradhya/React-project/bootcamp-react/my-burger-app/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","BURGER_PURCHASE_SUCCESS","orderId","purchaseBurgerFail","error","BURGER_PURCHASE_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","response","console","log","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParam","get","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess= (id, orderData)=>{\n    return{\n        type: actionTypes.BURGER_PURCHASE_SUCCESS,\n        orderId: id,\n        orderData:orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error)=>{\n    return{\n        type: actionTypes.BURGER_PURCHASE_FAIL,\n        error:error\n    }\n}\n\nexport const purchaseBurgerStart = () =>{\n    return {\n        type:actionTypes.PURCHASE_BURGER_START\n    };\n};\n\n\n\nexport const purchaseBurger = (orderData,token) =>{\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth='+ token,orderData)\n             .then(response => {\n                 console.log(response.data);\n                 dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n             })\n             .catch(error => {\n                 dispatch(purchaseBurgerFail(error));   \n             });\n            };\n}\nexport const purchaseInit = () =>{\n    return{\n        type: actionTypes.PURCHASE_INIT \n    };\n};\n\nexport const fetchOrdersSuccess = (orders)=>{\n    return{\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error)=>{\n    return{\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error:error\n    };\n};\nexport const fetchOrdersStart = () =>{\n    return{\n        type:actionTypes.FETCH_ORDERS_START\n    };\n};\n\n\nexport const fetchOrders=(token, userId) =>{\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParam = '?auth='+ token +  '&orderBy=\"userId\"&equalTO=\"' +userId + '\"';\n        axios.get('/orders.json'+ queryParam)\n            .then(res => {\n                const fetchedOrders = [];\n                for(let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id:key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders))\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err));\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}